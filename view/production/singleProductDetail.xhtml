<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.com/products/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:a4j="http://richfaces.org/a4j"
                xmlns:c="http://java.sun.com/jstl/core"
                xmlns:app="http://encens.com/products/khipus/facelets"
                xmlns:rich="http://richfaces.org/rich">
    <s:div rendered="#{productionPlanningAction.showDetailSingleProduct}">
    <s:div style="text-align:right;">

        <!-- <a4j:commandButton action="#{productionPlanningAction.makeExecutedOrderSingle}"
                            value="#{messages['ProductionPlanning.makeFinalized']}"
                            styleClass="button"
                            rendered="#{productionPlanningAction.singleProduct.state eq 'EXECUTED'}"
                            reRender="productionList,formulaSet,ruleBotton2,ruleBotton1,baseProductionList"/>-->
        <a4j:commandButton action="#{productionPlanningAction.makeExecutedOrderSingle}"
                           value="#{messages['ProductionPlanning.makeExecuted']}"
                           styleClass="button"
                           rendered="#{productionPlanningAction.singleProduct.state eq 'PENDING' }"
                           reRender="productionList,formulaSet,ruleBotton2,ruleBotton1,baseProductionList"/>

        <a4j:commandButton action="#{productionPlanningAction.makeFinalizedOrderSingle}"
                           value="#{messages['ProductionPlanning.makeFinalized']}"
                           styleClass="button"
                           rendered="#{productionPlanningAction.singleProduct.state eq 'EXECUTED' }"
                           reRender="productionList,formulaSet,ruleBotton2,ruleBotton1,baseProductionList"/>

        <a4j:commandButton value="#{messages['Common.delete']}"
                         reRender="productionList,formulaSet,ruleBotton2,ruleBotton1,baseProductionList"
                         styleClass="button"
                         rendered="#{s:hasPermission('DELETESINGLEPRODUCT','DELETE') and singleProduct.state == 'PENDING'}">
            <rich:componentControl for="deleteConfirmationSingle" event="onclick" disableDefault="true"
                                   operation="show"/>
        </a4j:commandButton>

        <!--<a4j:commandButton
                value="#{messages['ProductionPlanning.generateValeOrder']}"
                styleClass="button"
                rendered="#{productionPlanningAction.singleProduct.state eq 'FINALIZED' and !(productionPlanningAction.singleProduct.state eq 'TABULATED') }">
            <rich:componentControl for="confirmationVoucherSingle" event="onclick" disableDefault="true"
                                   operation="show"/>
        </a4j:commandButton>-->

        <a4j:commandButton action="#{productionPlanningAction.closeSingleDetail}" ajaxSingle="true"
                           value="#{messages['ProductionPlanning.innerButtonCancelDetail']}"
                           reRender="productionList,formulaSet,ruleBotton2,ruleBotton1,baseProductionList"/>
        <!--
        <h:commandButton
                action="#{productionPlanningReportAction.generateReportByOrder(productionOrderForPlanning.productComposition.productionIngredientList,productionOrderForPlanning.orderInputs,productionOrderForPlanning.orderMaterials,productionPlanning,productionOrderForPlanning)}"
                value="#{messages['ProductionPlanning.generateOrderDocumnt']}"
                styleClass="button"
                rendered="#{productionPlanningAction.managed}"/>

                    <h:commandButton
                           action="#{productionPlanningReportAction.generateReportSummary(productionOrderForPlanning.productComposition.productionIngredientList,productionOrderForPlanning.orderInputs,productionOrderForPlanning.orderMaterials,productionPlanning,productionOrderForPlanning,productionOrderForPlanning.productComposition.processedProduct.productItem.unitCost)}"
                           value="#{messages['ProductionPlanning.generateSummaryDocumnt']}"
                           styleClass="button"
                           rendered="#{productionPlanningAction.managed}"
                           tabindex="1"/>

        <h:commandButton
                action="#{productionPlanningReportAction.generateReportSummary(productionOrderForPlanning.productComposition.productionIngredientList,productionOrderForPlanning.orderInputs,productionOrderForPlanning.orderMaterials,productionPlanning,productionOrderForPlanning,productionOrderForPlanning.unitCost)}"
                value="#{messages['ProductionPlanning.generateSummaryDocumnt']}"
                styleClass="button"
                rendered="#{productionPlanningAction.managed}"/>
-->




    </s:div>
    <app:fieldset id="orderSingleDetail" title="#{messages['ProductionOrder.processedProduct.detail']}">
        <h:panelGrid columns="3"
                     width="100%"
                     cellpadding="0"
                     cellspacing="0"
                     border="0"
                     columnClasses="width50percent, width50percent">

            <s:div>

                <s:decorate id="nameSingleProductField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.processedProduct.name'] }</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.productProcessingSingle.metaProduct.name}"/>
                </s:decorate>

                <s:decorate id="baseProductCodeField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.processedProduct.code']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.baseProduct.code}"/>
                </s:decorate>


                <s:decorate id="singleProductStateField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.estateOrder']}</ui:define>
                    <h:outputText
                            style="font-weight: bold; color: #{productionPlanningAction.singleProduct.state == 'PENDING' ? 'red' :(productionPlanningAction.singleProduct.state == 'EXECUTED' ? 'blue' : (productionPlanningAction.singleProduct.state == 'TABULATED' ? 'fuchsia' : 'green'))}"
                            value="#{productionPlanningAction.singleProduct.state == 'PENDING' ? messages['productionOrderForPlanning.estateOrder.pending'] : (productionPlanningAction.singleProduct.state == 'EXECUTED' ? messages['productionOrderForPlanning.estateOrder.executed'] : (productionPlanningAction.singleProduct.state == 'TABULATED' ? messages['productionOrderForPlanning.estateOrder.tabulated'] : messages['productionOrderForPlanning.estateOrder.finalized']))}"/>
                </s:decorate>

            </s:div>

            <s:div>

                <s:decorate id="producingAmountSingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.processedProduct.amountObtained'] }</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.amount}">
                        <f:convertNumber pattern="#{messages['patterns.decimalNumber']}"/>
                    </h:outputText>
                </s:decorate>

                <s:decorate id="totalPriceMaterialSingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.totalPriceMaterial']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.totalMaterial}">
                        <f:convertNumber pattern="#{messages['patterns.decimalNumber']}"/>
                    </h:outputText>
                </s:decorate>

                <s:decorate id="totalPriceInputSingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.totalPriceInput']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.totalInput}">
                        <f:convertNumber pattern="#{messages['patterns.decimalNumber']}"/>
                    </h:outputText>
                </s:decorate>

                <s:decorate id="totalPriceJourneySingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.totalPriceJourney']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.costLabor}">
                        <f:convertNumber pattern="#{messages['patterns.decimalNumber']}"/>
                    </h:outputText>
                </s:decorate>

                <s:decorate id="totalIndirectCostsSingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.totalIndirectCosts']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.totalIndirecCost}">
                        <f:convertNumber pattern="#{messages['patterns.decimalNumber']}"/>
                    </h:outputText>
                </s:decorate>

                <s:decorate id="totalCostProductionSingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.totalCostProduction']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.totalCostProduction}">
                        <f:convertNumber pattern="#{messages['patterns.decimalNumber']}"/>
                    </h:outputText>
                </s:decorate>

                <s:decorate id="unitCostMaterialSingleField" template="/include/inputField.xhtml" styleClass="formRow">
                    <ui:define name="label">#{messages['ProductionOrder.costPriceObtained']}</ui:define>
                    <h:outputText value="#{productionPlanningAction.singleProduct.unitCost}">
                        <f:convertNumber pattern="#{messages['patterns.decimal6FNumber']}"/>
                    </h:outputText>
                </s:decorate>

            </s:div>

        </h:panelGrid>
    </app:fieldset>
    <!--region detalle Materiales-->
    <app:fieldset id="materialDetailProductsSingle" title="#{messages['MovementDetail.detailMaterial']}">
        <h:panelGrid columns="1"
                     width="100%"
                     cellpadding="0"
                     cellspacing="0"
                     border="0">
            <s:div id="materialDetailListPanelSingle">

                <table cellpadding="0" cellspacing="0" border="0" width="100%" class="rich-table">
                    <thead class="rich-table-thead">
                    <tr class="rich-table-header">
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.productItem']}
                        </th>
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.measureUnit']}
                        </th>
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.amountRequired']}
                        </th>
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.amountUsed']}
                        </th>
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.amountReturn']}
                        </th>
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.priceCost']}
                        </th>
                        <th class="rich-table-headercell">
                            #{messages['MovementDetail.priceCostTotal']}
                        </th>
                    </tr>
                    </thead>

                    <c:forEach var="instance" items="#{productionPlanningAction.singleProduct.orderMaterials}" varStatus="row">
                        <c:set var="amountRequiredId" value="quantityField_#{row.index}"/>

                        <tr class="rich-table-row">
                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.productItem.fullName}"/>
                            </td>
                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.productItem.usageMeasureUnit.name}"/>
                            </td>
                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.amountRequired}"/>
                            </td>
                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.amountUsed}"/>
                            </td>
                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.amountReturned}"/>
                            </td>
                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.costUnit}"/>
                            </td>

                            <td class="rich-table-cell">
                                <h:outputText value="#{instance.costTotal}"/>
                            </td>
                        </tr>

                    </c:forEach>
                </table>
            </s:div>
        </h:panelGrid>
    </app:fieldset>

    </s:div>

    </ui:composition>

